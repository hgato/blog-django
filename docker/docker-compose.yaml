version: '3'

services:
  nginx:
    build:
      context: ./nginx
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      - node


  db:
    image: postgres
    env_file: ./.env
    ports:
      - 5432:5432
    volumes:
      - ../database/data:/var/lib/postgresql/data

  backend:
    build: ./django
    command: python manage.py runserver 0.0.0.0:8000
#    command: bash -c "tail -f /dev/null"
    volumes:
      - ../src-backend:/src
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file: ./.env

  redis:
    image: redis:alpine

  node:
    image: node:12
    volumes:
      - ../src-frontend:/usr/src/service
    working_dir: /usr/src/service
    ports:
      - "3000:3000"
#    command: bash -c "npm install &&
#      npm run-script build && node_modules/.bin/http-server dist/"
    command: bash -c "tail -f /dev/null"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.4
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
  logstash:
    build:
      context: ./logstash
    volumes:
      - ./logstash/conf.d:/etc/logstash/conf.d/
      - ./logstash/driver/postgresql-42.2.6.jar:/usr/share/java/postgresql-42.2.6.jar
    command: bash -c "/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/config.conf"
  elasticsearch-tools:
    build:
      context: ./elasticsearch-tools
    volumes:
      - ./elasticsearch-tools/delete_obsolete.py:/var/src/delete_obsolete.py
    command: "python /var/src/delete_obsolete.py"
